CREATE DATABASE RETAIL_PROJECT

USE RETAIL_PROJECT;
SELECT * FROM ORDER_DATA;

SELECT
A.ORDER_ID,
A.Order_Date,
A.Ship_Date,
A.CUSTOMER_SSN,
B.CUSTOMER_NAME,
B.DOB,
B.Segment,
B.City,
B.State,
B.Country,
B.Market,
B.Region,
A.Product_ID,
C.Category,
C.Sub_Category,
C.Product_Name,
C.PRICE,
C.DISCOUNT,
C.PROFIT,
A.UNITS
INTO SALES_MASTER_TABLE
FROM ORDER_DATA AS A 
LEFT JOIN
CUSTOMER AS B
ON
A.CUSTOMER_SSN=B.CUSTOMER_SSN
LEFT JOIN
PRODUCT AS  C
ON
A.Product_ID=C.Product_ID;

--=================================================================
SELECT * FROM SALES_MASTER_TABLE;

SELECT
ORDER_ID,
Order_Date,
Ship_Date,
CUSTOMER_SSN,
CUSTOMER_NAME,
DOB,
Segment,
City,
State,
Country,
Market,
Region,
Product_ID,
Category,
Sub_Category,
Product_Name,
PRICE,
DISCOUNT,
PROFIT,
UNITS,
PRICE-(PRICE*DISCOUNT) AS PRICE_AFTER_DISCOUNT,
(PRICE-(PRICE*DISCOUNT))*UNITS AS SALES,
((PRICE-(PRICE*DISCOUNT))*UNITS)*PROFIT AS PROFIT_OVER_SALES
INTO SALES_MASTER_TABLE1
FROM SALES_MASTER_TABLE;

--=================================================================================
SELECT * FROM SALES_MASTER_TABLE2
SELECT
ORDER_ID,
Order_Date,
DATEPART(YEAR,ORDER_DATE) AS ORDER_YEAR,
DATENAME(MONTH,ORDER_DATE)AS ORDER_MONTH,
(YEAR(ORDER_DATE)*100+MONTH(ORDER_DATE)) AS ORDER_YM,
Ship_Date,
DATEDIFF(DAY,ORDER_DATE,SHIP_DATE) AS DAYS_GAP,
CUSTOMER_SSN,
CUSTOMER_NAME,
SUBSTRING(CUSTOMER_NAME,1,CHARINDEX(' ',CUSTOMER_NAME)+0) AS CUST_FNAME,
SUBSTRING(CUSTOMER_NAME,CHARINDEX(' ',CUSTOMER_NAME)+1,10) AS CUST_LNAME,
DOB,
DATEDIFF(YEAR,DOB,GETDATE()) AS AGE,
CASE 
WHEN DATEDIFF(YEAR,DOB,GETDATE())>70 THEN 'OLD-AGE'
WHEN DATEDIFF(YEAR,DOB,GETDATE())>=50 THEN 'MID-AGE'
WHEN DATEDIFF(YEAR,DOB,GETDATE())>=30 THEN 'MID-YOUNG-AGE'
ELSE 'YOUNG-AGE'
END AS AGE_BUCKET,
Segment,
City,
State,
Country,
Market,
Region,
Product_ID,
Category,
Sub_Category,
Product_Name,
FORMAT(PRICE,'C0') AS PRICE,
FORMAT(DISCOUNT,'P0') AS DISCOUNT,
FORMAT(PROFIT,'P0') AS PROFIT,
FORMAT(UNITS,'N0') AS UNITS,
FORMAT(PRICE_AFTER_DISCOUNT,'C0') AS PRICE_AFTER_DISCOUNT,
FORMAT(SALES,'C0') AS SALES,
FORMAT(PROFIT_OVER_SALES,'C0') AS PROFIT_OVER_SALES,
CASE WHEN SALES>5000 THEN 'VERY-HIGH'
WHEN SALES>=3000 THEN 'HIGH'
WHEN SALES>=2000 THEN 'MID'
WHEN SALES>=1000 THEN 'LOW'
ELSE 'VERY-LOW'
END AS SALES_BUCKET
INTO SALES_MASTER_TABLE2
FROM SALES_MASTER_TABLE1;
--=============================================================

SELECT
*
INTO SALES_MASTER_TABLE3
FROM SALES_MASTER_TABLE2
WHERE PRODUCT_ID IS NOT NULL;
